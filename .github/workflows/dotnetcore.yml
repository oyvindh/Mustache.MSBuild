name: .NET Core

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
    publicRelease: "${{ github.ref == 'refs/heads/main' && 'true' || 'false' }}"
    configuration: "${{ github.ref == 'refs/heads/main' && 'Release' || 'Debug' }}"

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      packageVersion: ${{ steps.setPackageVersion.outputs.packageVersion }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3

    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration $configuration --no-restore -warnaserror
    - name: Test
      run: dotnet test --configuration $configuration --no-restore --no-build --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura
    - name: Package NuGet
      if: env.publicRelease == true
      run: dotnet pack --no-restore --no-build --configuration $configuration -o packages
    - name: Set package version
      if: env.publicRelease == true
      id: setPackageVersion
      run: echo "::set-output name=packageVersion::$BUILD_VERSION"
    - uses: actions/upload-artifact@v3
      if: env.publicRelease == true
      with:
        name: packages-drop
        path: |
          packages/*.nupkg

  nuget-release:
    if: ${{ github.ref == 'refs/heads/main' && true || false }} # can't use env in this context, so need to re evaluate
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: packages-drop
        path: packages
    - name: Display structure of downloaded files
      run: ls -R
    - uses: actions/setup-dotnet@v3
    - name: Publish NuGet Package
      run: dotnet nuget push packages/Hic.Mustache.MSBuild.${{ needs.build.outputs.packageVersion }}.nupkg -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json

